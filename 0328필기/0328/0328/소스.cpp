#include <iostream>
using namespace std;

int main()
{
//1장
/*
	//c에서 c++로 가면서 바뀐점들...
	//구조체와 클래스는 기능은 비슷하지만 추구하는방향이 다름. 클래스를 구조체처럼 사용하면 점수 없음
	//비주얼스튜디오에서만 통용되는 비표준도 있다. 다른 컴파일러에서는 사용불가하므로 표준을 사용하도록 한다.
	//거의모든 언어들이 객체지향언어이다. c++코드작성시 c의 코드를 그대로 사용하지 말고 객체지향개념을 최대한 적용하도록 한다.
	//객체지향개념의 3가지 특징-캡슐화,상속,다형성
	//엄격한 타입체크
	//static_cast, dynamic_cast, reinterpret_cast, cont_cast의 차이를 묻는 문제 시험에 반드시 나옴
	//매크로대신 인라인함수를 사용한다. 매크로는 자료형을 알수 없기 때문에 사용하지 않게됨.
	//디폴트 매개 변수(default parameter) ex) int a(int b=1.5); 이면 a();일때 a(1.5);로 인식한다.
	//malloc,free함수대신 new,delete함수를 사용해서 메모리를 동적으로 할당한다.
	//모델링(설계)(아키텍트)을 잘하는것이 중요.
	//c++은 c와의 호환성을 추구한다.
	//c에서 만들어진 헤더파일은 cstdlib처럼 앞에 c라는 접두사로 구분한다.(.h가 사라졌으므로 c++, c에 동시 선언된 헤더파일구분위해)
	//STL라이브러리(standard templete library)
*/


//2장
/*
//특별히 namespace를 지정하지 않으면 defalult네임 스페이스 사용
//getline은 cin에 정의되어있는 메소드
*/

	return 0;
}